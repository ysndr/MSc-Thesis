name: "Build and push preview"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

concurrency: preview

env:
  PREVIEW_PATH: "./previews"
  PREVIEW_BRANCH: "preview"

jobs:
  build:
    name: Build Preview
    runs-on: ubuntu-latest
    steps:
      - name: Start preview deployment
        uses: bobheadxi/deployments@v0.6.2
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          no_override: true
          env: ${{ github.head_ref }}
          ref: ${{ github.head_ref }}
      - name: Install Nix
        uses: cachix/install-nix-action@v15
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Setup environment
        run: |

          git config user.name "Preview Action"
          git config user.email "notifications+thesis@ysndr.de"

          # create PREVIEW_BRANCH branch if not exists
          if [[ ! $(git rev-parse --verify origin/"${{env.PREVIEW_BRANCH}}") ]]; then
            git branch "$PREVIEW_BRANCH" origin/main
          else
            # update PREVIEW_BRANCH to match main again if it does exist
            git checkout ${{env.PREVIEW_BRANCH}}
            git merge origin/main
            git checkout -
          fi

          mkdir -vp ${{env.PREVIEW_PATH}}/$(dirname ${{github.head_ref}})

      - name: Compile Chapter ${{github.head_ref}}
        if: ${{ startsWith(github.head_ref, 'chapter/') }}
        run: |
          nix develop --impure -c \
              compile-chapter-preview ${{github.head_ref}}.md ${{env.PREVIEW_PATH}}/${{github.head_ref}}.pdf

      - name: Archive ${{github.head_ref}}
        if: ${{ startsWith(github.head_ref, 'chapter/') }}
        uses: actions/upload-artifact@v2
        with:
          name: chapter-plain
          path: ${{env.PREVIEW_PATH}}/${{github.head_ref}}.pdf

      - name: Prepare preview branch
        run: |
          git add ${{env.PREVIEW_PATH}}
          git stash push
          git switch ${{env.PREVIEW_BRANCH}}
          git merge --squash origin/${{github.head_ref}} -Xtheirs
          if [[ ${{ startsWith(github.head_ref, 'chapter/') }} ]]; then
            if [[ -z $(git diff --cached --exit-code) ]]; then
              echo "No files changed"
            else
              git commit --no-edit 
            fi
          else
            echo "Non chapter branch, not committing proposed changes"
          fi
          git checkout stash -- ${{env.PREVIEW_PATH}}

      - name: Compile document preview
        if: ${{ startsWith(github.head_ref, 'chapter/') }}
        run: |
          nix develop --impure -c compile-thesis ${{env.PREVIEW_PATH}}/latest.pdf

      - name: Archive document preview
        if: ${{ startsWith(github.head_ref, 'chapter/') }}
        uses: actions/upload-artifact@v2
        with:
          name: preview-complete
          path: ${{env.PREVIEW_PATH}}/latest.pdf

      # other changes to the document not on chapter branches will be deployed as preview
      # of the full docuemtn
      - name: Compile PR preview
        if: ${{ !startsWith(github.head_ref, 'chapter/') }}
        run: |
          nix develop --impure -c compile-thesis ${{env.PREVIEW_PATH}}/${{github.head_ref}}.pdf

      - name: Archive PR preview
        if: ${{ !startsWith(github.head_ref, 'chapter/') }}
        uses: actions/upload-artifact@v2
        with:
          name: preview-complete
          path: ${{env.PREVIEW_PATH}}/${{github.head_ref}}.pdf

      - name: Commit and push to branch
        run: |
          git add ${{env.PREVIEW_PATH}}
          git commit -m "Build single and combined preview for \"${{github.head_ref}}\"" -m ${{github.sha}} || echo "No files changed"
          git push -u origin ${{env.PREVIEW_BRANCH}}
          
          echo "PREVIEW_REF=$(git rev-parse --verify --short ${{env.PREVIEW_BRANCH}})" >> $GITHUB_ENV

      - name: Update deployment status
        uses: bobheadxi/deployments@v0.6.2
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          auto_inactive: false
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: "https://github.com/${{github.repository}}/tree/${{env.PREVIEW_REF}}/${{env.PREVIEW_PATH}}/${{github.head_ref}}.pdf"
